# _plugins/generate_tag_pages.rb
require 'fileutils'
require 'yaml'

module Jekyll
  class TagPageGenerator < Generator
    safe true
    priority :low  # runs after posts and data are loaded

    def generate(site)
      tags_dir = 'tags'

      # --- Collect tags from posts ---
      post_tags = site.posts.docs.flat_map do |post|
        post.data['tags'] || []
      end.map(&:to_s)

      # --- Collect tags from vocabulary data ---
      vocab_tags = []
      if site.data['vocabulary']
        vocab_tags = site.data['vocabulary'].flat_map do |entry|
          entry['tags'] || []
        end.map(&:to_s)
      end

      # --- Merge and normalize ---
      all_tags = (post_tags + vocab_tags).map(&:downcase).uniq

      # --- Generate pages ---
      all_tags.each do |tag|
        clean_tag = tag.downcase.strip.gsub(/^tags[-\/]/, '') # remove 'tags-' or 'tags/' prefix
        slug = clean_tag.gsub(/\s+/, '-').gsub(/[^\w-]/, '').gsub(/-+/, '-')
        tag_folder = File.join(tags_dir, slug)
        FileUtils.mkdir_p(tag_folder)

        File.open(File.join(tag_folder, 'index.md'), 'w') do |file|
          file.puts <<~MARKDOWN
            ---
            layout: tag
            tag: #{tag}
            title: Posts tagged "#{tag}"
            permalink: /tags/#{slug}/
            ---
            <!-- Auto-generated by generate_tag_pages.rb -->
          MARKDOWN
        end
      end

      # Optional: console feedback
      Jekyll.logger.info "TagPageGenerator:", "Generated #{all_tags.size} tag pages"
    end
  end
end
